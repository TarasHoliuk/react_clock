{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","interval","setInterval","setState","console","log","toLocaleTimeString","currentProps","oldName","clockName","this","props","clearInterval","React","Component","App","isClockVisible","changeVisibility","prevState","setName","Math","round","random","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"sNAWaA,EAAb,4MACEC,MAAe,CACbC,KAAM,IAAIC,MAFd,EAKEC,SAAWC,aAAY,WACrB,EAAKC,SAAS,CAAEJ,KAAM,IAAIC,OAC1BI,QAAQC,IAAI,EAAKP,MAAMC,KAAKO,wBAC3B,KARL,wDAUE,SAAmBC,GACjB,IAAMC,EAAUD,EAAaE,UAEzBD,IAAYE,KAAKC,MAAMF,WACzBL,QAAQC,IAAR,iCAAsCG,EAAtC,eAAoDE,KAAKC,MAAMF,cAdrE,kCAkBE,WACEG,cAAcF,KAAKT,YAnBvB,oBAsBE,WACE,IAAQQ,EAAcC,KAAKC,MAAnBF,UACAV,EAASW,KAAKZ,MAAdC,KAER,OACE,gCACE,oDACoBA,EAAKO,wBAGzB,4CACYG,YAjCpB,GAA2BI,IAAMC,WCwClBC,E,4MAzCbjB,MAAQ,CACNkB,gBAAgB,EAChBP,UAAW,G,EAGbQ,iBAAmB,kBAAM,EAAKd,UAAS,SAAAe,GAAS,MAC9C,CAAEF,gBAAiBE,EAAUF,oB,EAE/BG,QAAU,kBAAM,EAAKhB,SAAS,CAAEM,UAAWW,KAAKC,MAAsB,IAAhBD,KAAKE,a,4CAE3D,WACE,MAAsCZ,KAAKZ,MAAnCkB,EAAR,EAAQA,eAAgBP,EAAxB,EAAwBA,UAExB,OACE,sBAAMc,UAAU,OAAhB,SACE,sBAAKA,UAAU,MAAf,UACE,6CAEA,wBACEA,UAAU,cACVC,KAAK,SACLC,QAASf,KAAKO,iBAHhB,SAKGD,EAAiB,OAAS,SAG5BA,GAAkB,cAAC,EAAD,CAAOP,UAAWA,IAErC,wBACEc,UAAU,cACVC,KAAK,SACLC,QAASf,KAAKS,QAHhB,sC,GA7BQN,IAAMC,WCNxBY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.baa24f7c.chunk.js","sourcesContent":["import React from 'react';\n/* eslint-disable no-console */\n\ntype State = {\n  time: Date;\n};\n\ntype Props = {\n  clockName: number;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state: State = {\n    time: new Date(),\n  };\n\n  interval = setInterval(() => {\n    this.setState({ time: new Date() });\n    console.log(this.state.time.toLocaleTimeString());\n  }, 1000);\n\n  componentDidUpdate(currentProps: Props) {\n    const oldName = currentProps.clockName;\n\n    if (oldName !== this.props.clockName) {\n      console.log(`Clock was renamed from ${oldName} to ${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    const { clockName } = this.props;\n    const { time } = this.state;\n\n    return (\n      <div>\n        <p>\n          {`Current time: ${time.toLocaleTimeString()}`}\n        </p>\n\n        <p>\n          {`Name: ${clockName}`}\n        </p>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock/Clock';\n\ntype State = {\n  isClockVisible: boolean;\n  clockName: number;\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    isClockVisible: true,\n    clockName: 0,\n  };\n\n  changeVisibility = () => this.setState(prevState => (\n    { isClockVisible: !prevState.isClockVisible }));\n\n  setName = () => this.setState({ clockName: Math.round(Math.random() * 100) });\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <main className=\"main\">\n        <div className=\"App\">\n          <h1>React clock</h1>\n\n          <button\n            className=\"App__button\"\n            type=\"button\"\n            onClick={this.changeVisibility}\n          >\n            {isClockVisible ? 'Hide' : 'Show'}\n          </button>\n\n          {isClockVisible && <Clock clockName={clockName} />}\n\n          <button\n            className=\"App__button\"\n            type=\"button\"\n            onClick={this.setName}\n          >\n            Set random name\n          </button>\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}
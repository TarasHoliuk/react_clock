{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","toLocaleTimeString","intervalId","setInterval","setState","console","log","this","clearInterval","React","Component","App","isClockVisible","clockName","changeVisibility","prevState","setName","Math","round","random","type","onClick","className","ReactDOM","render","document","getElementById"],"mappings":"sNAOaA,EAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,qBACjBC,WAAY,GAHhB,uDAME,WAAqB,IAAD,OACZA,EAAaC,aAAY,WAC7B,EAAKC,SAAS,CAAEL,MAAM,IAAIC,MAAOC,uBAEnCI,QAAQC,IAAI,EAAKR,MAAMC,QACpB,KAEHQ,KAAKH,SAAS,CAAEF,iBAbpB,kCAgBE,WACEM,cAAcD,KAAKT,MAAMI,cAjB7B,oBAoBE,WACE,OACE,8CAEG,IACAK,KAAKT,MAAMC,YAzBpB,GAA2BU,IAAMC,WCyClBC,E,4MAtCbb,MAAQ,CACNc,gBAAgB,EAChBC,UAAW,uB,EAGbC,iBAAmB,kBAAM,EAAKV,UAAS,SAAAW,GAAS,MAC9C,CAAEH,gBAAiBG,EAAUH,oB,EAE/BI,QAAU,kBAAM,EAAKZ,SAAS,CAAES,UAAWI,KAAKC,MAAsB,IAAhBD,KAAKE,a,4CAE3D,WACE,MAAsCZ,KAAKT,MAAnCc,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,UAExB,OACE,qCACE,wBAAQO,KAAK,SAASC,QAASd,KAAKO,iBAApC,SACGF,EAAiB,OAAS,SAG7B,sBAAKU,UAAU,MAAf,UACE,6CACCV,GAAkB,cAAC,EAAD,OAGrB,wBAAQQ,KAAK,SAASC,QAASd,KAAKS,QAApC,6BAIA,sCAEG,IACAH,Y,GAhCOJ,IAAMC,WCNxBa,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c6d05eaf.chunk.js","sourcesContent":["import React from 'react';\n\ninterface State {\n  time: string;\n  intervalId?: NodeJS.Timeout | number;\n}\n\nexport class Clock extends React.Component<{}, State> {\n  state = {\n    time: new Date().toLocaleTimeString(),\n    intervalId: 0,\n  };\n\n  componentDidMount() {\n    const intervalId = setInterval(() => {\n      this.setState({ time: new Date().toLocaleTimeString() });\n      // eslint-disable-next-line\n    console.log(this.state.time);\n    }, 1000);\n\n    this.setState({ intervalId });\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.intervalId);\n  }\n\n  render() {\n    return (\n      <p>\n        Current time:\n        {' '}\n        {this.state.time}\n      </p>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock/Clock';\n\ntype State = {\n  isClockVisible: boolean;\n  clockName: number | string;\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    isClockVisible: true,\n    clockName: 'Try to set my name!',\n  };\n\n  changeVisibility = () => this.setState(prevState => (\n    { isClockVisible: !prevState.isClockVisible }));\n\n  setName = () => this.setState({ clockName: Math.round(Math.random() * 100) });\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <>\n        <button type=\"button\" onClick={this.changeVisibility}>\n          {isClockVisible ? 'Hide' : 'Show'}\n        </button>\n\n        <div className=\"App\">\n          <h1>React clock</h1>\n          {isClockVisible && <Clock />}\n        </div>\n\n        <button type=\"button\" onClick={this.setName}>\n          Set random name\n        </button>\n\n        <p>\n          Name:\n          {' '}\n          {clockName}\n        </p>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}
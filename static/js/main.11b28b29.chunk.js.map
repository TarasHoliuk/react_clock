{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","toLocaleTimeString","intervalId","setInterval","setState","this","prevProps","oldName","clockName","props","console","log","clearInterval","React","Component","App","isClockVisible","changeVisibility","prevState","setName","Math","round","random","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"sNAWaA,EAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,qBACjBC,WAAY,GAHhB,uDAME,WAAqB,IAAD,OACZA,EAAaC,aAAY,WAC7B,EAAKC,SAAS,CAAEL,MAAM,IAAIC,MAAOC,yBAChC,KAEHI,KAAKD,SAAS,CAAEF,iBAXpB,gCAcE,SAAmBI,GACjB,IAAMC,EAAUD,EAAUE,UAE1B,OAAOD,IAAYF,KAAKI,MAAMD,UAE5BE,QAAQC,IAAR,iCAAsCJ,EAAtC,eAAoDF,KAAKI,MAAMD,YAE/DE,QAAQC,IAAIN,KAAKP,MAAMC,QArB7B,kCAwBE,WACEa,cAAcP,KAAKP,MAAMI,cAzB7B,oBA4BE,WACE,IAAQM,EAAcH,KAAKI,MAAnBD,UAER,OACE,gCACE,8CAEG,IACAH,KAAKP,MAAMC,QAGd,4CACYS,YAxCpB,GAA2BK,IAAMC,WCwClBC,E,4MAzCbjB,MAAQ,CACNkB,gBAAgB,EAChBR,UAAW,uB,EAGbS,iBAAmB,kBAAM,EAAKb,UAAS,SAAAc,GAAS,MAC9C,CAAEF,gBAAiBE,EAAUF,oB,EAE/BG,QAAU,kBAAM,EAAKf,SAAS,CAAEI,UAAWY,KAAKC,MAAsB,IAAhBD,KAAKE,a,4CAE3D,WACE,MAAsCjB,KAAKP,MAAnCkB,EAAR,EAAQA,eAAgBR,EAAxB,EAAwBA,UAExB,OACE,sBAAMe,UAAU,OAAhB,SACE,sBAAKA,UAAU,MAAf,UACE,6CAEA,wBACEA,UAAU,qBACVC,KAAK,SACLC,QAASpB,KAAKY,iBAHhB,SAKGD,EAAiB,OAAS,SAG5BA,GAAkB,cAAC,EAAD,CAAOR,UAAWA,IAErC,wBACEe,UAAU,qBACVC,KAAK,SACLC,QAASpB,KAAKc,QAHhB,sC,GA7BQN,IAAMC,WCNxBY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.11b28b29.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  time: string;\n  intervalId?: NodeJS.Timeout | number;\n};\n\ntype Props = {\n  clockName: number | string;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    time: new Date().toLocaleTimeString(),\n    intervalId: 0,\n  };\n\n  componentDidMount() {\n    const intervalId = setInterval(() => {\n      this.setState({ time: new Date().toLocaleTimeString() });\n    }, 1000);\n\n    this.setState({ intervalId });\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const oldName = prevProps.clockName;\n\n    return oldName !== this.props.clockName\n    // eslint-disable-next-line\n    ? console.log(`Clock was renamed from ${oldName} to ${this.props.clockName}`)\n    // eslint-disable-next-line\n    : console.log(this.state.time);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.intervalId);\n  }\n\n  render() {\n    const { clockName } = this.props;\n\n    return (\n      <div>\n        <p>\n          Current time:\n          {' '}\n          {this.state.time}\n        </p>\n\n        <p>\n          {`Name: ${clockName}`}\n        </p>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock/Clock';\n\ntype State = {\n  isClockVisible: boolean;\n  clockName: number | string;\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    isClockVisible: true,\n    clockName: 'Try to set my name!',\n  };\n\n  changeVisibility = () => this.setState(prevState => (\n    { isClockVisible: !prevState.isClockVisible }));\n\n  setName = () => this.setState({ clockName: Math.round(Math.random() * 100) });\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <main className=\"main\">\n        <div className=\"App\">\n          <h1>React clock</h1>\n\n          <button\n            className=\"button App__button\"\n            type=\"button\"\n            onClick={this.changeVisibility}\n          >\n            {isClockVisible ? 'Hide' : 'Show'}\n          </button>\n\n          {isClockVisible && <Clock clockName={clockName} />}\n\n          <button\n            className=\"button App__button\"\n            type=\"button\"\n            onClick={this.setName}\n          >\n            Set random name\n          </button>\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}